// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using foody_be.Models.Context;

#nullable disable

namespace foody_be.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240421122750_fix-erd-foreign-key")]
    partial class fixerdforeignkey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("foody_be.Models.ErdModels.Blog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("clone")
                        .HasColumnType("int");

                    b.Property<int>("createAt")
                        .HasColumnType("int");

                    b.Property<int>("heart")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("planId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("planId");

                    b.HasIndex("userId");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Comment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("blogId")
                        .HasColumnType("int");

                    b.Property<string>("body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("createAt")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("blogId");

                    b.HasIndex("userId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.DayPlan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("mealPlanLenght")
                        .HasColumnType("int");

                    b.Property<int>("nutritionId")
                        .HasColumnType("int");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.Property<int>("planId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("nutritionId");

                    b.HasIndex("planId");

                    b.ToTable("DayPlan");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Diet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("createAt")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("planLenght")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Diet");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.FoodForMeal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("mealPlanId")
                        .HasColumnType("int");

                    b.Property<int>("recipeId")
                        .HasColumnType("int");

                    b.Property<string>("recipeVulue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("mealPlanId");

                    b.HasIndex("recipeId");

                    b.ToTable("FoodForMeal");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.HealthNeed", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("caloriesNeedPerDay")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("healthNeedTypeId")
                        .HasColumnType("int");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("healthNeedTypeId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("HealthNeed");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.HealthNeedType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("HealthNeedType");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Ingredient", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ingredientTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("isLiquid")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("nutritionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ingredientTypeId");

                    b.HasIndex("nutritionId");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.IngredientType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("IngredientType");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.MealPlan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("dayPlanId")
                        .HasColumnType("int");

                    b.Property<int>("nutritionId")
                        .HasColumnType("int");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.Property<int>("startTime")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("dayPlanId");

                    b.HasIndex("nutritionId");

                    b.ToTable("MealPlan");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Nutrition", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal?>("calcium")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("calories")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("carbohydrates")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("cholesterol")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("fat")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("fiber")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("iron")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("potassium")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("protein")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("saturated_fat")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("sodium")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("sugars")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("trans_fat")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("vitaminD")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("id");

                    b.ToTable("Nutrition");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Plan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("createAt")
                        .HasColumnType("int");

                    b.Property<int>("dayPlanLenght")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("dietId")
                        .HasColumnType("int");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("nutritionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("dietId");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.PlanHistory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("createAt")
                        .HasColumnType("int");

                    b.Property<bool>("isChange")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("planId")
                        .HasColumnType("int");

                    b.Property<string>("planValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("skipDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("startDate")
                        .HasColumnType("int");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("planId");

                    b.HasIndex("userId");

                    b.ToTable("PlanHistory");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Recipe", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Ingredientid")
                        .HasColumnType("int");

                    b.Property<int>("createAt")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("nutritionId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int>("totalTime")
                        .HasColumnType("int");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("Ingredientid");

                    b.HasIndex("nutritionId");

                    b.HasIndex("userId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.RecipeDirection", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.Property<int>("recipeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("recipeId");

                    b.ToTable("RecipeDirection");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.RecipeIngredient", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<int>("ingredientId")
                        .HasColumnType("int");

                    b.Property<int>("recipeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ingredientId");

                    b.HasIndex("recipeId");

                    b.ToTable("RecipeIngredient");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.User", b =>
                {
                    b.Property<string>("uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("activity")
                        .HasColumnType("int");

                    b.Property<string>("avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("createAt")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("weight")
                        .HasColumnType("int");

                    b.HasKey("uid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Blog", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.Plan", "Plan")
                        .WithMany("Blog")
                        .HasForeignKey("planId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("foody_be.Models.ErdModels.User", "User")
                        .WithMany("Blog")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Comment", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.Blog", "Blog")
                        .WithMany("Comment")
                        .HasForeignKey("blogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("foody_be.Models.ErdModels.User", "User")
                        .WithMany("Comment")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.DayPlan", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.Nutrition", "Nutrition")
                        .WithMany()
                        .HasForeignKey("nutritionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("foody_be.Models.ErdModels.Plan", "Plan")
                        .WithMany("DayPlan")
                        .HasForeignKey("planId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nutrition");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Diet", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.User", "User")
                        .WithMany("Diet")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.FoodForMeal", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.MealPlan", "MealPlan")
                        .WithMany("FoodForMeal")
                        .HasForeignKey("mealPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("foody_be.Models.ErdModels.Recipe", "Recipe")
                        .WithMany("FoodForMeal")
                        .HasForeignKey("recipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MealPlan");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.HealthNeed", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.HealthNeedType", "HealthNeedType")
                        .WithMany("HealthNeed")
                        .HasForeignKey("healthNeedTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("foody_be.Models.ErdModels.User", "User")
                        .WithOne("HealthNeed")
                        .HasForeignKey("foody_be.Models.ErdModels.HealthNeed", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthNeedType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Ingredient", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.IngredientType", "IngredientType")
                        .WithMany("Ingredient")
                        .HasForeignKey("ingredientTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("foody_be.Models.ErdModels.Nutrition", "Nutrition")
                        .WithMany()
                        .HasForeignKey("nutritionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IngredientType");

                    b.Navigation("Nutrition");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.MealPlan", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.DayPlan", "DayPlan")
                        .WithMany("MealPlan")
                        .HasForeignKey("dayPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("foody_be.Models.ErdModels.Nutrition", "Nutrition")
                        .WithMany()
                        .HasForeignKey("nutritionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DayPlan");

                    b.Navigation("Nutrition");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Plan", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.Diet", "Diet")
                        .WithMany("Plan")
                        .HasForeignKey("dietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diet");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.PlanHistory", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.Plan", "Plan")
                        .WithMany("PlanHistory")
                        .HasForeignKey("planId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("foody_be.Models.ErdModels.User", "User")
                        .WithMany("PlanHistory")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Recipe", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.Ingredient", null)
                        .WithMany("Recipe")
                        .HasForeignKey("Ingredientid");

                    b.HasOne("foody_be.Models.ErdModels.Nutrition", "Nutrition")
                        .WithMany()
                        .HasForeignKey("nutritionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("foody_be.Models.ErdModels.User", "User")
                        .WithMany("Recipe")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nutrition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.RecipeDirection", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.Recipe", "Recipe")
                        .WithMany("Direction")
                        .HasForeignKey("recipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.RecipeIngredient", b =>
                {
                    b.HasOne("foody_be.Models.ErdModels.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("ingredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("foody_be.Models.ErdModels.Recipe", "Recipe")
                        .WithMany("RecipeIngredient")
                        .HasForeignKey("recipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Blog", b =>
                {
                    b.Navigation("Comment");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.DayPlan", b =>
                {
                    b.Navigation("MealPlan");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Diet", b =>
                {
                    b.Navigation("Plan");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.HealthNeedType", b =>
                {
                    b.Navigation("HealthNeed");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Ingredient", b =>
                {
                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.IngredientType", b =>
                {
                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.MealPlan", b =>
                {
                    b.Navigation("FoodForMeal");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Plan", b =>
                {
                    b.Navigation("Blog");

                    b.Navigation("DayPlan");

                    b.Navigation("PlanHistory");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.Recipe", b =>
                {
                    b.Navigation("Direction");

                    b.Navigation("FoodForMeal");

                    b.Navigation("RecipeIngredient");
                });

            modelBuilder.Entity("foody_be.Models.ErdModels.User", b =>
                {
                    b.Navigation("Blog");

                    b.Navigation("Comment");

                    b.Navigation("Diet");

                    b.Navigation("HealthNeed")
                        .IsRequired();

                    b.Navigation("PlanHistory");

                    b.Navigation("Recipe");
                });
#pragma warning restore 612, 618
        }
    }
}
